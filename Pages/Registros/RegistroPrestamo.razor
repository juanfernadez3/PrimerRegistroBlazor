@page "/RegistroPrestamos"

@using PrimerRegistro.Models;
@using PrimerRegistro.BLL;

@inject IToastService toast

    <EditForm Model="Prestamos" OnValidSubmit="Guardar">
        <DataAnnotationsValidator />
        <div class="card">
            <div class="card-header">
                <h3>
                    Registro Prestamos
                </h3>
            </div>

            <div class="card-body">
                <form>
                    @*PrestamoID*@
                    <div class="form-row" align-items-center>
                        <div class="col">
                            <div class="form-group">
                                <label>
                                    PrestamoID:
                                </label>
                                <div class="input-group">
                                    <InputNumber @bind-Value="Prestamos.PrestamoID" class="form-control col-4" />
                                    <div class="input-group-append">
                                        <button type="button" class="btn btn-primary input-group-Text" @onclick="Buscar">
                                            <span class="oi oi-zoom-in" />Buscar
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    @*Fecha de Prestamo*@
                    <div>
                        <label>
                            Fecha de Prestamo:
                        </label>
                        <InputDate @bind-Value="Prestamos.FechaPrestamo" class="form-control" />
                        <ValidationMessage For="@(() => Prestamos.FechaPrestamo)" />
                        <small id="FechaPrestamoLineHelper" class="text-muted">
                            El formato es Mes/Dia/Año
                        </small>
                    </div>

                    @*PersonaId*@
                    <div class="form-group" style="border-top: 1px solid;">
                        <label>Persona</label>
                        <SfComboBox TItem="Personas" TValue="int" DataSource="lista" @bind-Value="Prestamos.PersonaID">
                            <ComboBoxFieldSettings Text="Nombre" Value="PersonaID">
                            </ComboBoxFieldSettings>
                        </SfComboBox>
                        <small id="PersonaIdInlineHelper" class="text-muted">Seleccione la persona</small>
                    </div>


                    @*Concepto*@
                    <div>
                        <label>
                            Concepto:
                        </label>
                        <InputText @bind-Value="Prestamos.Concepto" class="form-control" />
                        <ValidationMessage For="@(() => Prestamos.Concepto)" />
                        <small id="NameInLineHelper" class="text-muted">
                            El campo Condepto debe de estar lleno.
                        </small>
                    </div>


                    @*Monto*@
                    <div>
                        <label>
                            Monto:
                        </label>
                        <InputNumber @bind-Value="Prestamos.Monto" class="form-control" />
                        <ValidationMessage For="@(() => Prestamos.Monto)" />
                        <small id="MontoLineHelper" class="text-muted">
                            El campo Monto debe de estar lleno.
                        </small>
                    </div>

                    @*Balance*@
                    <div>
                        <label>
                            Balance:
                        </label>
                        <InputNumber readonly @bind-Value="Prestamos.Balance" class="form-control" />
                        <ValidationMessage For="@(() => Prestamos.Balance)" />
                        <small id="BalanceInLineHelper" class="text-muted">
                        </small>
                    </div>

                </form>
            </div>

            @*Buttons*@
            <div class="card-footer">
                <div class="form-group text-center" display: inline-block>

                    <button type="button" class="btn btn-lg btn-primary" @onclick="Nuevo">
                        <span class="oi oi-plus"></span> Nuevo
                    </button>

                    <button type="submit" class="btn btn-lg btn-success">
                        <span class="oi oi-clipboard" aria-hidden="true"></span> Guardar
                    </button>

                    <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar">
                        <i class="fa fa-trash"></i>
                        <span class="oi oi-trash"></span>   Eliminar
                    </button>

                </div>
            </div>

        </div>
    </EditForm> 

@code {

    Prestamos Prestamos = new Prestamos();
    Personas Personas = new Personas();
    List<Personas> lista = new List<Personas>();

    protected override void OnInitialized()
    {
        Buscar();
        Nuevo();
        lista = PersonasBLL.GetList(x => true); 
    }

    private void Nuevo()
    {
        Prestamos = new Prestamos();
    }

    private void Guardar()
    {
        bool guardado;
        Prestamos.Balance = PrestamosBLL.AumentarPrestamos(Prestamos.Balance, Prestamos.Monto);
        PrestamosBLL.BalancePersona(Prestamos.PersonaID, Prestamos.Balance);
        guardado = PrestamosBLL.Guardar(Prestamos);

        if (guardado)
        {
            Nuevo();
            toast.ShowSuccess("Se Guardo Exitosamente");

        }
    }

    private void Buscar()
    {
        if (Prestamos.PrestamoID > 0)
        {
            var encontrado = PrestamosBLL.Buscar(Prestamos.PrestamoID);
            if (encontrado != null)
                this.Prestamos = encontrado;
            else
                toast.ShowWarning("No encontrado");
        }
    }

    private void Eliminar()
    {
        bool eliminado;

        eliminado = PrestamosBLL.Eliminar(Prestamos.PrestamoID);

        if (eliminado)
        {
            Nuevo();
            toast.ShowSuccess("Se ha Eliminado Correctamente");
        }
    }
}